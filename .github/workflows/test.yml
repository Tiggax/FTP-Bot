# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Nushell UwU

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test_game:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - uses: hustcer/setup-nu@v3.8
      with:
        version: "0.87.1"
    - name: Create Class 1
      run: javac Player1/Player.java
    - name: Create Class 2
      run: javac Player2/Player.java
    - name: Create Class 3
      run: javac Player3/Player.java
    - name: Create Class 4
      run: javac Player4/Player.java

    - name: Run Game
      run: java -jar Game.jar --gui=false Player1 Player2 Player3 Player4 > game${{ matrix.test }}.log; exit 0
      continue-on-error: true
      
    - name: Save Game log
      uses: actions/upload-artifact@v3
      with:
        name: games
        path: game${{ matrix.test }}.log
        
    - name: Determine game
      shell: nu {0}
      run: |
        open game${{ matrix.test }}.log --raw 
        | lines
        | last 72
        | split list ""
        | each {|playr|
          $playr 
          | parse "{key}: {val}"
          | transpose -r
          | into record
        }
        | save result${{ matrix.test }}.nuon
        print (open result${{ matrix.test }}.nuon)
    
    - name: Save result
      uses: actions/upload-artifact@v3
      with:
        name: results
        path: result${{ matrix.test }}.nuon
        
    - name: Show winner
      shell: nu {0}
      run: |
        open result${{ matrix.test }}.nuon
        | where survive == "true"
    - name: New Kids on the block won?
      shell: nu {0}
      run: |
        let winners = (open result${{ matrix.test }}.nuon
        | where survive == "true")

        if (["Player1" "Player2" ] | any {|p| $p in $winners.STAT }) {
        print $"${{ matrix.test }}: Success ($winners.STAT) won"
        } else {
        print $"${{ matrix.test }}: fail! ($winners.STAT) won"
        }

  generate_report:
    needs: test_game
    runs-on: ubuntu-latest

    steps:
      - uses: hustcer/setup-nu@v3.8
        with:
          version: "0.87.1"

      - name: Get Reports
        uses: actions/download-artifact@v3
        with:
          name: results
          
      - name: generate Summary
        shell: nu {0}
        run: |
          let data = (ls result*.nuon
          | get name
          | each {|run|
            open $run
          })
          $env.GITHUB_STEP_SUMMARY ++= "\n# Test summary\n"
          $env.GITHUB_STEP_SUMMARY ++= ($data
          | enumerate
          | each {|i|
            $"
            ## Run: ($i.index)
            
            ($i.item
            | select STAT survive
            | to md)
            "
          })
          $env.GITHUB_STEP_SUMMARY ++= "\n# Data\n"
          $env.GITHUB_STEP_SUMMARY ++= ($data
          | enumerate
          | each {|i|
            $"
            ## Run ($i.index) data
            ($i.item | to md)
            "})

          
    
